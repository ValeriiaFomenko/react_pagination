{"version":3,"sources":["components/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","pages","Math","ceil","isHandlePrevClick","isHandleNextClick","pageNumbers","Array","from","length","_","index","className","cn","disabled","href","onClick","map","pageNumber","active","items","to","numbers","n","push","getNumbers","App","useState","setPerPage","setCurrentPage","totalItems","lastItemIndex","firstItemIndex","visibleItems","slice","id","onChange","event","selectedValue","Number","target","value","htmlFor","page","item","ReactDOM","render","document","getElementById"],"mappings":"oNAUaA,EAAwC,SAAC,GAK/C,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAgBC,KAAKC,KAAKN,EAAQC,GAClCM,EAAoC,IAAhBL,EACpBM,EAAoBN,IAAgBE,EAEpCK,EAAcC,MAAMC,KAAK,CAAEC,OAAQR,IAAS,SAACS,EAAGC,GAAJ,OAAcA,EAAQ,KAcxE,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAAUV,IAA3C,SACE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAAeX,EACfY,QAdgB,WACjBZ,GACHJ,EAAaD,EAAc,IAOzB,oBAWDO,EAAYW,KAAI,SAACC,GAAD,OACf,oBAEEN,UAAWC,IAAG,YAAa,CAAEM,OAAQD,IAAenB,IAFtD,SAIE,mBACE,UAAQ,WACRa,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMhB,EAAakB,IAJ9B,SAMGA,KATEA,MAcT,oBAAIN,UAAWC,IAAG,YAAa,CAAEC,SAAUT,IAA3C,SACE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAK,QACL,gBAAeV,EACfW,QAhDgB,WACjBX,GACHL,EAAaD,EAAc,IAyCzB,wBC5DFqB,ECLC,SAAoBZ,EAAca,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIf,EAAMe,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDFKG,CAAW,EAAG,IAAIR,KAAI,SAACM,GAAD,qBAAeA,MAEtCG,EAAgB,WAC3B,MAA8BC,mBAAiB,GAA/C,mBAAO7B,EAAP,KAAgB8B,EAAhB,KACA,EAAsCD,mBAAiB,GAAvD,mBAAO5B,EAAP,KAAoB8B,EAApB,KACMC,EAAaV,EAAMX,OACnBsB,EAAgBjC,EAAUC,EAC1BiC,EAAiBD,EAAgBjC,EAAU,EAC3CmC,EAAeb,EAAMc,MAAMF,EAAiB,EAAGD,GAarD,OACE,sBAAKnB,UAAU,YAAf,UACE,uDACA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWb,EADX,mBACiCiC,EADjC,cAEID,EAAgBD,EAAaA,EAAaC,EAF9C,eAGSD,EAHT,OAMA,sBAAKlB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRuB,GAAG,kBACHvB,UAAU,eACVwB,SAtBY,SAACC,GACrB,IAAMC,EAAgBC,OAAOF,EAAMG,OAAOC,OAE1Cb,EAAWU,GACXT,EAAe,IAmBPY,MAAO3C,EALT,UAOE,wBAAQ2C,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkB9B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEf,MAAOiC,EACPhC,QAASA,EACTC,YAAaA,EACbC,aA7Cc,SAAC2C,GACnBd,EAAec,MA+Cb,6BACGV,EAAahB,KAAI,SAAC2B,GAAD,OAChB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YE9DlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d84df7ad.chunk.js","sourcesContent":["import React from \"react\";\nimport cn from \"classnames\";\n\ntype PaginationProps = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pages: number = Math.ceil(total / perPage);\n  const isHandlePrevClick = currentPage === 1;\n  const isHandleNextClick = currentPage === pages;\n\n  const pageNumbers = Array.from({ length: pages }, (_, index) => index + 1);\n\n  const handleNextClick = () => {\n    if (!isHandleNextClick) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const handlePrevClick = () => {\n    if (!isHandlePrevClick) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn(\"page-item\", { disabled: isHandlePrevClick })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isHandlePrevClick}\n          onClick={handlePrevClick}\n        >\n          «\n        </a>\n      </li>\n\n      {pageNumbers.map((pageNumber) => (\n        <li\n          key={pageNumber}\n          className={cn(\"page-item\", { active: pageNumber === currentPage })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${pageNumber}`}\n            onClick={() => onPageChange(pageNumber)}\n          >\n            {pageNumber}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn(\"page-item\", { disabled: isHandleNextClick })}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isHandleNextClick}\n          onClick={handleNextClick}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n\nexport default Pagination;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { getNumbers } from \"./utils\";\nimport { Pagination } from \"./components/Pagination\";\n\nconst items = getNumbers(1, 42).map((n) => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState<number>(5);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const totalItems = items.length;\n  const lastItemIndex = perPage * currentPage;\n  const firstItemIndex = lastItemIndex - perPage + 1;\n  const visibleItems = items.slice(firstItemIndex - 1, lastItemIndex);\n\n  const itemsOnPage = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const handlePerPage = (event: React.ChangeEvent<HTMLSelectElement>): void => {\n    const selectedValue = Number(event.target.value);\n\n    setPerPage(selectedValue);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemIndex} - ${\n          lastItemIndex > totalItems ? totalItems : lastItemIndex\n        } of ${totalItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handlePerPage}\n            value={perPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={itemsOnPage}\n      />\n\n      <ul>\n        {visibleItems.map((item) => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}